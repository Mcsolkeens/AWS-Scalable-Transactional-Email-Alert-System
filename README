AWS Scalable -Transactional-EmailAlert System

# ðŸ’¬ AWS Transactional Email Alert System

This project demonstrates a **serverless architecture** that decouples email notification from a core banking application using **Amazon SQS, Lambda, and SES**.

---

## ðŸš€ Project Overview

A core banking system triggers transactional email alerts (e.g. deposits, withdrawals). Instead of directly using SMTP(or any email gatewa y) (which risks failure when local logs/storage overflow), we offload email processing using AWS-native services.

### ðŸ“¦ Tech Stack

* **Amazon SQS** â€“ Queue for email payloads
* **AWS Lambda** â€“ Processes messages from SQS and sends emails
* **Amazon SES** â€“ Sends high-deliverability transactional emails
* **CloudWatch** â€“ Logs and observability

---

## âœ… Architecture Flow

[Core App] â†’ [SQS] â†’ [Lambda] â†’ [SES] â†’ [Customer Email]

## ðŸ”¨ Setup Steps

### 1. **Create SQS Queue**

* Standard queue named `give it a situable name`
* No FIFO needed unless strict ordering is required

### 2. **Create Lambda Function**

* Triggered by the SQS queue
* Reads message, extracts recipient, subject, and body
* Uses Boto3 to send email via SES

### 3. **Configure SES**

> SES requires domain/email **verification** to prevent spam and spoofing.

* Use a **personal email** (e.g. Gmail, Yahoo) or a **registered domain**
* In **sandbox mode**, SES can only send to verified recipients
* For production access, submit a request to AWS

### 4. **Send Message via Core App**

A Python script (`core_app_sqs.py`)- (see repo for details of python script) sends a message like:

```



